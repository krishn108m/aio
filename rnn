import tensorflow
from tensorflow import keras
from keras.models import Sequential
from keras.layers import Dense,Embedding ,LSTM
from keras.datasets import imdb
from keras.preprocessing import sequence

(x_train,y_train),(x_test,y_test) = imdb.load_data(num_words=500)

x_train = sequence.pad_sequences(x_train,maxlen=10)
x_test = sequence.pad_sequences(x_test,maxlen=10)

model = Sequential()
model.add(Embedding(500,128))
model.add(LSTM(128,activation='tanh',recurrent_activation='sigmoid'))
model.add(Dense(1, activation = 'sigmoid'))
# model.summary()
model.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])
model.fit(x_train,y_train)
from random import randint
op = model.predict(x_test)
idx = randint(0,len(x_test)-1)
rev = {v: k for k, v in imdb.get_word_index().items()}
dec =  " ".join([rev.get(i-3,'#') for i in x_test[idx]])
sen = "positive" if op[idx][0] >= 0.5 else "negative"
print(dec)
print(sen)
print(f"{op[idx][0]:4f}")
print(y_test[idx])
