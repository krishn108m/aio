import tensorflow
from tensorflow import keras
from keras.layers import Dense, Conv2D, Flatten , MaxPooling2D
from keras import Sequential
from keras.datasets import mnist

(x_train,y_train),(x_test,y_test) = mnist.load_data()

limit_train = 100
limit_test = 10

# x_train = x_train[:limit_train]
# y_train = y_train[:limit_train]
# x_test = x_test[:limit_test]
# y_test = y_test[:limit_test]

# x_train = x_train.reshape(-1, 28, 28, 1)
# x_test = x_test.reshape(-1, 28, 28, 1)

model = Sequential()
model.add(Conv2D(40,kernel_size = (3,3), padding='Valid', activation='relu',input_shape=(28,28,1)))
model.add(MaxPooling2D(pool_size = (2,2), strides=(2,2), padding='valid'))
model.add(Conv2D(20,kernel_size = (3,3), padding='Valid', activation='relu'))
model.add(MaxPooling2D(pool_size = (2,2), strides=(2,2), padding='valid'))
model.add(Conv2D(20,kernel_size = (3,3), padding='Valid',activation='relu'))
model.add(MaxPooling2D(pool_size = (2,2), strides=(2,2), padding='valid'))

model.add(Flatten())

model.add(Dense(128,activation='relu'))
# model.add(Dropout(0.5))
model.add(Dense(10,activation='softmax'))
# model.summary()
model.compile(optimizer='adam',loss='sparse_categorical_crossentropy' ,metrics=['accuracy'])
model.fit(x_train,y_train,epochs=5,validation_data=(x_test, y_test))

import numpy as np
import matplotlib.pyplot as plt

image_index = np.random.randint(0, len(x_test))
image = x_test[image_index]
image_for_prediction = np.expand_dims(image, axis=0)
prediction = model.predict(image_for_prediction)
predicted_class = np.argmax(prediction)
plt.imshow(image.reshape(28, 28), cmap='gray')
plt.title(f"Predicted Number: {predicted_class}")
plt.show()

